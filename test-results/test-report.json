{"numFailedTestSuites":16,"numFailedTests":35,"numPassedTestSuites":6,"numPassedTests":94,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":22,"numTotalTests":129,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1745540710762,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["ThemeDetector"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ThemeDetector should detect themes from content","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should detect themes from content"},{"ancestorTitles":["ThemeDetector"],"duration":2,"failureDetails":[{"matcherResult":{"actual":2,"expected":1,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 1\nReceived: 2\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/theme-detector.test.ts:100:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ThemeDetector should merge similar themes","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should merge similar themes"},{"ancestorTitles":["ThemeDetector"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ThemeDetector should get themes by keywords","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should get themes by keywords"},{"ancestorTitles":["ThemeDetector"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"ThemeDetector should update existing themes with new content","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should update existing themes with new content"}],"endTime":1745540712482,"message":"  ● ThemeDetector › should merge similar themes\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 1\n    Received: 2\n\n       98 |     const mergedThemes = await themeDetector.mergeThemes([theme1, theme2]);\n       99 |\n    > 100 |     expect(mergedThemes.length).toBe(1);\n          |                                 ^\n      101 |     expect(mergedThemes[0].keywords.length).toBeGreaterThan(\n      102 |       Math.max(theme1.keywords.length, theme2.keywords.length)\n      103 |     );\n\n      at Object.toBe (src/tests/core/categorization/theme-detector.test.ts:100:33)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/theme-detector.test.ts","startTime":1745540710889,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Content Processing Module","HtmlContentExtractor"],"duration":25,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Industry Updates\"\nReceived string:    \"<h2>Latest Tech News</h2> <p> Welcome to our weekly tech newsletter. This week we're covering the latest advancements in AI technology and how they're changing the industry. </p> <div class=\\\"section\\\"> <h3>AI Developments</h3> <p> A new breakthrough in natural language processing has enabled more human-like conversations with AI assistants. <a href=\\\"https://example.com/ai-news\\\">Read more</a> about how this technology works. </p> <p> Researchers at Tech University have published a paper on improved object detection algorithms that work in low-light conditions. This could revolutionize autonomous driving technology. </p>\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Industry Updates\"\nReceived string:    \"<h2>Latest Tech News</h2> <p> Welcome to our weekly tech newsletter. This week we're covering the latest advancements in AI technology and how they're changing the industry. </p> <div class=\\\"section\\\"> <h3>AI Developments</h3> <p> A new breakthrough in natural language processing has enabled more human-like conversations with AI assistants. <a href=\\\"https://example.com/ai-news\\\">Read more</a> about how this technology works. </p> <p> Researchers at Tech University have published a paper on improved object detection algorithms that work in low-light conditions. This could revolutionize autonomous driving technology. </p>\"\n    at Object.toContain (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/content-processing/content-processor.test.ts:87:27)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Content Processing Module HtmlContentExtractor should extract main content from HTML","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should extract main content from HTML"},{"ancestorTitles":["Content Processing Module","HtmlContentExtractor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module HtmlContentExtractor should convert HTML to plain text","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should convert HTML to plain text"},{"ancestorTitles":["Content Processing Module","HtmlContentExtractor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module HtmlContentExtractor should clean HTML","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should clean HTML"},{"ancestorTitles":["Content Processing Module","LinkExtractor"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module LinkExtractor should extract links from HTML content","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should extract links from HTML content"},{"ancestorTitles":["Content Processing Module","NewsletterStructureParser"],"duration":3,"failureDetails":[{"matcherResult":{"actual":"Tech Newsletter - Test Issue","expected":"Tech Newsletter","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Tech Newsletter\"\nReceived: \"Tech Newsletter - Test Issue\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"Tech Newsletter\"\nReceived: \"Tech Newsletter - Test Issue\"\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/content-processing/content-processor.test.ts:143:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Content Processing Module NewsletterStructureParser should parse newsletter structure","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should parse newsletter structure"},{"ancestorTitles":["Content Processing Module","NewsletterStructureParser"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module NewsletterStructureParser should identify sections in newsletter","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should identify sections in newsletter"},{"ancestorTitles":["Content Processing Module","TopicExtractor"],"duration":7,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/content-processing/content-processor.test.ts:190:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Content Processing Module TopicExtractor should extract topics from content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should extract topics from content"},{"ancestorTitles":["Content Processing Module","TopicExtractor"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module TopicExtractor should extract keywords from content","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should extract keywords from content"},{"ancestorTitles":["Content Processing Module","ContentProcessor"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module ContentProcessor should extract content from an email","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should extract content from an email"},{"ancestorTitles":["Content Processing Module","ContentProcessor"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Content Processing Module ContentProcessor should store and retrieve content","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should store and retrieve content"}],"endTime":1745540712495,"message":"  ● Content Processing Module › HtmlContentExtractor › should extract main content from HTML\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Industry Updates\"\n    Received string:    \"<h2>Latest Tech News</h2> <p> Welcome to our weekly tech newsletter. This week we're covering the latest advancements in AI technology and how they're changing the industry. </p> <div class=\\\"section\\\"> <h3>AI Developments</h3> <p> A new breakthrough in natural language processing has enabled more human-like conversations with AI assistants. <a href=\\\"https://example.com/ai-news\\\">Read more</a> about how this technology works. </p> <p> Researchers at Tech University have published a paper on improved object detection algorithms that work in low-light conditions. This could revolutionize autonomous driving technology. </p>\"\n\n      85 |       expect(mainContent).toContain('Latest Tech News');\n      86 |       expect(mainContent).toContain('AI Developments');\n    > 87 |       expect(mainContent).toContain('Industry Updates');\n         |                           ^\n      88 |     });\n      89 |     \n      90 |     test('should convert HTML to plain text', () => {\n\n      at Object.toContain (src/tests/content-processing/content-processor.test.ts:87:27)\n\n  ● Content Processing Module › NewsletterStructureParser › should parse newsletter structure\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"Tech Newsletter\"\n    Received: \"Tech Newsletter - Test Issue\"\n\n      141 |       \n      142 |       // Check title extraction\n    > 143 |       expect(structure.title).toBe('Tech Newsletter');\n          |                               ^\n      144 |       \n      145 |       // Check sections\n      146 |       expect(structure.sections.length).toBeGreaterThan(0);\n\n      at Object.toBe (src/tests/content-processing/content-processor.test.ts:143:31)\n\n  ● Content Processing Module › TopicExtractor › should extract topics from content\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n      188 |         topic.keywords.some(kw => kw.toLowerCase().includes('ai'))\n      189 |       );\n    > 190 |       expect(aiTopic).toBeDefined();\n          |                       ^\n      191 |       \n      192 |       // Check confidence scores\n      193 |       topics.forEach(topic => {\n\n      at Object.toBeDefined (src/tests/content-processing/content-processor.test.ts:190:23)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/content-processing/content-processor.test.ts","startTime":1745540710891,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["CategorizerImpl"],"duration":37,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/categorizer-impl.test.ts:70:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CategorizerImpl should categorize newsletter content","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should categorize newsletter content"},{"ancestorTitles":["CategorizerImpl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CategorizerImpl should add a new category","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should add a new category"},{"ancestorTitles":["CategorizerImpl"],"duration":3,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/categorizer-impl.test.ts:145:68)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CategorizerImpl should link newsletter to category","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should link newsletter to category"},{"ancestorTitles":["CategorizerImpl"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CategorizerImpl should retrieve categories for a user","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should retrieve categories for a user"}],"endTime":1745540712565,"message":"  ● CategorizerImpl › should categorize newsletter content\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      68 |\n      69 |     expect(categories).toBeDefined();\n    > 70 |     expect(categories.length).toBeGreaterThan(0);\n         |                               ^\n      71 |     \n      72 |     // Should match business/finance category\n      73 |     const financeCategory = categories.find(c => \n\n      at Object.toBeGreaterThan (src/tests/core/categorization/categorizer-impl.test.ts:70:31)\n\n  ● CategorizerImpl › should link newsletter to category\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      143 |\n      144 |     // The test category should be assigned due to our manual linking\n    > 145 |     expect(assignedCategories.some(c => c.id === testCategory.id)).toBe(true);\n          |                                                                    ^\n      146 |   });\n      147 |\n      148 |   test('should retrieve categories for a user', async () => {\n\n      at Object.toBe (src/tests/core/categorization/categorizer-impl.test.ts:145:68)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/categorizer-impl.test.ts","startTime":1745540710894,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["GetNewslettersTool"],"duration":18,"failureDetails":[],"failureMessages":[],"fullName":"GetNewslettersTool should have the correct name and description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have the correct name and description"},{"ancestorTitles":["GetNewslettersTool"],"duration":11,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalled()\n\nExpected number of calls: >= 1\nReceived number of calls:    0\n    at Object.toHaveBeenCalled (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/get-newsletters-tool.test.ts:98:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GetNewslettersTool should retrieve newsletters with default parameters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should retrieve newsletters with default parameters"},{"ancestorTitles":["GetNewslettersTool"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"after:2023/01/01 before:2023/12/31\", Anything\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"after:2023/01/01 before:2023/12/31\", Anything\n\nNumber of calls: 0\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/get-newsletters-tool.test.ts:125:44)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GetNewslettersTool should apply time range filters correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should apply time range filters correctly"},{"ancestorTitles":["GetNewslettersTool"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"from:newsletter@example.com OR from:updates@company.com\", Anything\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: StringContaining \"from:newsletter@example.com OR from:updates@company.com\", Anything\n\nNumber of calls: 0\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/get-newsletters-tool.test.ts:137:44)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GetNewslettersTool should apply source filters correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should apply source filters correctly"},{"ancestorTitles":["GetNewslettersTool"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: Anything, ObjectContaining {\"maxResults\": 5}\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: Anything, ObjectContaining {\"maxResults\": 5}\n\nNumber of calls: 0\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/get-newsletters-tool.test.ts:149:44)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"GetNewslettersTool should respect the limit parameter","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should respect the limit parameter"},{"ancestorTitles":["GetNewslettersTool"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"GetNewslettersTool should include content when requested","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should include content when requested"},{"ancestorTitles":["GetNewslettersTool"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"GetNewslettersTool should handle errors gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle errors gracefully"}],"endTime":1745540712614,"message":"  ● GetNewslettersTool › should retrieve newsletters with default parameters\n\n    expect(jest.fn()).toHaveBeenCalled()\n\n    Expected number of calls: >= 1\n    Received number of calls:    0\n\n       96 |     expect(GmailMcpClient).toHaveBeenCalled();\n       97 |     const mockGmailInstance = (GmailMcpClient as jest.Mock).mock.instances[0];\n    >  98 |     expect(mockGmailInstance.connect).toHaveBeenCalled();\n          |                                       ^\n       99 |     expect(mockGmailInstance.disconnect).toHaveBeenCalled();\n      100 |     \n      101 |     // Verify emails were searched\n\n      at Object.toHaveBeenCalled (src/tests/tools/get-newsletters-tool.test.ts:98:39)\n\n  ● GetNewslettersTool › should apply time range filters correctly\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"after:2023/01/01 before:2023/12/31\", Anything\n\n    Number of calls: 0\n\n      123 |     \n      124 |     const mockGmailInstance = (GmailMcpClient as jest.Mock).mock.instances[0];\n    > 125 |     expect(mockGmailInstance.searchEmails).toHaveBeenCalledWith(\n          |                                            ^\n      126 |       expect.stringContaining('after:2023/01/01 before:2023/12/31'),\n      127 |       expect.anything()\n      128 |     );\n\n      at Object.toHaveBeenCalledWith (src/tests/tools/get-newsletters-tool.test.ts:125:44)\n\n  ● GetNewslettersTool › should apply source filters correctly\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: StringContaining \"from:newsletter@example.com OR from:updates@company.com\", Anything\n\n    Number of calls: 0\n\n      135 |     \n      136 |     const mockGmailInstance = (GmailMcpClient as jest.Mock).mock.instances[0];\n    > 137 |     expect(mockGmailInstance.searchEmails).toHaveBeenCalledWith(\n          |                                            ^\n      138 |       expect.stringContaining('from:newsletter@example.com OR from:updates@company.com'),\n      139 |       expect.anything()\n      140 |     );\n\n      at Object.toHaveBeenCalledWith (src/tests/tools/get-newsletters-tool.test.ts:137:44)\n\n  ● GetNewslettersTool › should respect the limit parameter\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: Anything, ObjectContaining {\"maxResults\": 5}\n\n    Number of calls: 0\n\n      147 |     \n      148 |     const mockGmailInstance = (GmailMcpClient as jest.Mock).mock.instances[0];\n    > 149 |     expect(mockGmailInstance.searchEmails).toHaveBeenCalledWith(\n          |                                            ^\n      150 |       expect.anything(),\n      151 |       expect.objectContaining({ maxResults: 5 })\n      152 |     );\n\n      at Object.toHaveBeenCalledWith (src/tests/tools/get-newsletters-tool.test.ts:149:44)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/get-newsletters-tool.test.ts","startTime":1745540710889,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["EmailTemplateRenderer"],"duration":130,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"/test/templates\", {\"recursive\": true}\n\nNumber of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"/test/templates\", {\"recursive\": true}\n\nNumber of calls: 0\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/digest/email-template-renderer.test.ts:48:23)"],"fullName":"EmailTemplateRenderer creates default templates if none exist","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"creates default templates if none exist"},{"ancestorTitles":["EmailTemplateRenderer"],"duration":104,"failureDetails":[],"failureMessages":[],"fullName":"EmailTemplateRenderer loads existing templates from filesystem","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"loads existing templates from filesystem"},{"ancestorTitles":["EmailTemplateRenderer"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"EmailTemplateRenderer renders digest to HTML using template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"renders digest to HTML using template"},{"ancestorTitles":["EmailTemplateRenderer"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"EmailTemplateRenderer throws error when template not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"throws error when template not found"},{"ancestorTitles":["EmailTemplateRenderer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"EmailTemplateRenderer renders custom template with provided data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"renders custom template with provided data"}],"endTime":1745540712622,"message":"  ● EmailTemplateRenderer › creates default templates if none exist\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"/test/templates\", {\"recursive\": true}\n\n    Number of calls: 0\n\n      46 |     const mockWriteFile = jest.requireMock('fs').promises.writeFile;\n      47 |     \n    > 48 |     expect(mockMkdir).toHaveBeenCalledWith(templatesDir, { recursive: true });\n         |                       ^\n      49 |     expect(mockWriteFile).toHaveBeenCalledTimes(4); // Four default templates\n      50 |   });\n      51 |   \n\n      at Object.toHaveBeenCalledWith (src/tests/core/digest/email-template-renderer.test.ts:48:23)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/digest/email-template-renderer.test.ts","startTime":1745540710880,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["FeedbackService","submitFeedback"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"user-1\", \"email-1\", \"confirm\"\nReceived: undefined, undefined, undefined, undefined\n\nNumber of calls: 1","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"user-1\", \"email-1\", \"confirm\"\nReceived: undefined, undefined, undefined, undefined\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/feedback/feedback-service.test.ts:138:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"FeedbackService submitFeedback should submit feedback and apply it to improve detection","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should submit feedback and apply it to improve detection"},{"ancestorTitles":["FeedbackService","submitFeedback"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"user-1\", \"email-1\", \"reject\"\nReceived: undefined, undefined, undefined, undefined\n\nNumber of calls: 1","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"user-1\", \"email-1\", \"reject\"\nReceived: undefined, undefined, undefined, undefined\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/feedback/feedback-service.test.ts:150:53)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"FeedbackService submitFeedback should use the correct feedback type based on isNewsletter flag","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use the correct feedback type based on isNewsletter flag"},{"ancestorTitles":["FeedbackService","processVerification"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackService processVerification should process a verification token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should process a verification token"},{"ancestorTitles":["FeedbackService","processVerification"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackService processVerification should use the correct feedback type based on isNewsletter flag","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should use the correct feedback type based on isNewsletter flag"},{"ancestorTitles":["FeedbackService","requestVerification"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackService requestVerification should generate a verification request","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should generate a verification request"},{"ancestorTitles":["FeedbackService","getFeedbackStats"],"duration":1,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"user-1\"\nReceived: \"user-1\", \"all\"\n\nNumber of calls: 1","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\nExpected: \"user-1\"\nReceived: \"user-1\", \"all\"\n\nNumber of calls: 1\n    at Object.toHaveBeenCalledWith (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/feedback/feedback-service.test.ts:198:52)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"FeedbackService getFeedbackStats should get feedback statistics for a user","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should get feedback statistics for a user"},{"ancestorTitles":["FeedbackService","processExpiredRequests"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackService processExpiredRequests should process expired verification requests","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should process expired verification requests"},{"ancestorTitles":["FeedbackService","trainPersonalizedModels"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackService trainPersonalizedModels should train personalized detection models","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should train personalized detection models"},{"ancestorTitles":["FeedbackService","trainPersonalizedModels"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackService trainPersonalizedModels should handle errors during training and continue with other users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle errors during training and continue with other users"}],"endTime":1745540712638,"message":"  ● FeedbackService › submitFeedback › should submit feedback and apply it to improve detection\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"user-1\", \"email-1\", \"confirm\"\n    Received: undefined, undefined, undefined, undefined\n\n    Number of calls: 1\n\n      136 |       await feedbackService.submitFeedback('user-1', 'email-1', true);\n      137 |       \n    > 138 |       expect(mockFeedbackCollector.collectFeedback).toHaveBeenCalledWith(\n          |                                                     ^\n      139 |         'user-1',\n      140 |         'email-1',\n      141 |         FeedbackType.CONFIRM\n\n      at Object.toHaveBeenCalledWith (src/tests/core/feedback/feedback-service.test.ts:138:53)\n\n  ● FeedbackService › submitFeedback › should use the correct feedback type based on isNewsletter flag\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"user-1\", \"email-1\", \"reject\"\n    Received: undefined, undefined, undefined, undefined\n\n    Number of calls: 1\n\n      148 |       await feedbackService.submitFeedback('user-1', 'email-1', false);\n      149 |       \n    > 150 |       expect(mockFeedbackCollector.collectFeedback).toHaveBeenCalledWith(\n          |                                                     ^\n      151 |         'user-1',\n      152 |         'email-1',\n      153 |         FeedbackType.REJECT\n\n      at Object.toHaveBeenCalledWith (src/tests/core/feedback/feedback-service.test.ts:150:53)\n\n  ● FeedbackService › getFeedbackStats › should get feedback statistics for a user\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"user-1\"\n    Received: \"user-1\", \"all\"\n\n    Number of calls: 1\n\n      196 |       const stats = await feedbackService.getFeedbackStats('user-1');\n      197 |       \n    > 198 |       expect(mockFeedbackAnalyzer.analyzeFeedback).toHaveBeenCalledWith('user-1');\n          |                                                    ^\n      199 |       expect(mockFeedbackCollector.getPendingVerifications).toHaveBeenCalledWith('user-1');\n      200 |       \n      201 |       expect(stats).toEqual({\n\n      at Object.toHaveBeenCalledWith (src/tests/core/feedback/feedback-service.test.ts:198:52)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/feedback/feedback-service.test.ts","startTime":1745540712535,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["DigestService"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"DigestService generateDailyDigest calls the digest generator","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"generateDailyDigest calls the digest generator"},{"ancestorTitles":["DigestService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DigestService generateWeeklyDigest calls the digest generator","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"generateWeeklyDigest calls the digest generator"},{"ancestorTitles":["DigestService"],"duration":1,"failureDetails":[{}],"failureMessages":["Error: Failed to schedule digests: Cannot read properties of undefined (reading 'then')\n    at DigestServiceImpl.scheduleDigests (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/core/digest/digest-service.ts:163:13)\n    at Object.scheduleDigests (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/digest/digest-service.test.ts:129:19)\n    at Promise.then.completed (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"DigestService scheduleDigests starts the scheduler and schedules for all users","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"scheduleDigests starts the scheduler and schedules for all users"},{"ancestorTitles":["DigestService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DigestService generateAndSendDigest generates a digest and sends it","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"generateAndSendDigest generates a digest and sends it"},{"ancestorTitles":["DigestService"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"DigestService generateAndSendDigest skips sending if digest has no content","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"generateAndSendDigest skips sending if digest has no content"},{"ancestorTitles":["DigestService"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DigestService generateAndSendDigest throws error if user preferences not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"generateAndSendDigest throws error if user preferences not found"}],"endTime":1745540712667,"message":"  ● DigestService › scheduleDigests starts the scheduler and schedules for all users\n\n    Failed to schedule digests: Cannot read properties of undefined (reading 'then')\n\n      161 |     } catch (error) {\n      162 |       this.logger.error(`Error scheduling digests: ${error instanceof Error ? error.message : String(error)}`);\n    > 163 |       throw new Error(`Failed to schedule digests: ${error instanceof Error ? error.message : String(error)}`);\n          |             ^\n      164 |     }\n      165 |   }\n      166 |\n\n      at DigestServiceImpl.scheduleDigests (src/core/digest/digest-service.ts:163:13)\n      at Object.scheduleDigests (src/tests/core/digest/digest-service.test.ts:129:19)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/digest/digest-service.test.ts","startTime":1745540712515,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["CategoryManager"],"duration":3,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeInstanceOf(expected)\n\nExpected constructor name is an empty string\nReceived constructor: Date\n","pass":false}}],"failureMessages":["Error: expect(received).toBeInstanceOf(expected)\n\nExpected constructor name is an empty string\nReceived constructor: Date\n\n    at Object.toBeInstanceOf (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/category-manager.test.ts:26:32)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CategoryManager should add a category","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"should add a category"},{"ancestorTitles":["CategoryManager"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CategoryManager should get a category by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should get a category by ID"},{"ancestorTitles":["CategoryManager"],"duration":2,"failureDetails":[{"matcherResult":{"actual":{},"expected":{},"message":"expect(received).not.toEqual(expected) // deep equality\n\nExpected: not 2023-05-15T12:00:00.000Z\n","name":"toEqual","pass":true}}],"failureMessages":["Error: expect(received).not.toEqual(expected) // deep equality\n\nExpected: not 2023-05-15T12:00:00.000Z\n\n    at Object.toEqual (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/category-manager.test.ts:57:43)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"CategoryManager should update a category","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"should update a category"},{"ancestorTitles":["CategoryManager"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CategoryManager should delete a category","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should delete a category"},{"ancestorTitles":["CategoryManager"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CategoryManager should get all categories","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should get all categories"},{"ancestorTitles":["CategoryManager"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CategoryManager should handle parent-child relationships","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle parent-child relationships"},{"ancestorTitles":["CategoryManager"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CategoryManager should move a category to a new parent","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should move a category to a new parent"},{"ancestorTitles":["CategoryManager"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CategoryManager should initialize with default categories","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should initialize with default categories"}],"endTime":1745540712706,"message":"  ● CategoryManager › should add a category\n\n    expect(received).toBeInstanceOf(expected)\n\n    Expected constructor name is an empty string\n    Received constructor: Date\n\n      24 |     expect(category.name).toBe('Test Category');\n      25 |     expect(category.description).toBe('A test category');\n    > 26 |     expect(category.createdAt).toBeInstanceOf(Date);\n         |                                ^\n      27 |     expect(category.updatedAt).toBeInstanceOf(Date);\n      28 |   });\n      29 |\n\n      at Object.toBeInstanceOf (src/tests/core/categorization/category-manager.test.ts:26:32)\n\n  ● CategoryManager › should update a category\n\n    expect(received).not.toEqual(expected) // deep equality\n\n    Expected: not 2023-05-15T12:00:00.000Z\n\n      55 |     expect(updatedCategory.name).toBe('Updated Category');\n      56 |     expect(updatedCategory.description).toBe('An updated test category');\n    > 57 |     expect(updatedCategory.updatedAt).not.toEqual(category.updatedAt);\n         |                                           ^\n      58 |   });\n      59 |\n      60 |   test('should delete a category', async () => {\n\n      at Object.toEqual (src/tests/core/categorization/category-manager.test.ts:57:43)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/category-manager.test.ts","startTime":1745540712632,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["NewsletterDetectorImpl"],"duration":14,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/detection/newsletter-detector-impl.test.ts:56:38)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"NewsletterDetectorImpl should detect a clear newsletter email","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should detect a clear newsletter email"},{"ancestorTitles":["NewsletterDetectorImpl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NewsletterDetectorImpl should detect a clear non-newsletter email","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should detect a clear non-newsletter email"},{"ancestorTitles":["NewsletterDetectorImpl"],"duration":9,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/detection/newsletter-detector-impl.test.ts:103:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"NewsletterDetectorImpl should incorporate user feedback","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should incorporate user feedback"},{"ancestorTitles":["NewsletterDetectorImpl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NewsletterDetectorImpl should calculate confidence score for specific methods","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should calculate confidence score for specific methods"},{"ancestorTitles":["NewsletterDetectorImpl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"NewsletterDetectorImpl should determine need for verification","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should determine need for verification"}],"endTime":1745540712738,"message":"  ● NewsletterDetectorImpl › should detect a clear newsletter email\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n      54 |     expect(result.isNewsletter).toBe(true);\n      55 |     expect(result.combinedScore).toBeGreaterThan(0.6);\n    > 56 |     expect(result.needsVerification).toBe(false); // Score should be high enough to not need verification\n         |                                      ^\n      57 |     expect(result.scores.length).toBe(4); // Should have scores from all 4 methods\n      58 |   });\n      59 |   \n\n      at Object.toBe (src/tests/core/detection/newsletter-detector-impl.test.ts:56:38)\n\n  ● NewsletterDetectorImpl › should incorporate user feedback\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      101 |     \n      102 |     const result = await detector.detectNewsletter(email, userFeedback);\n    > 103 |     expect(result.isNewsletter).toBe(true);\n          |                                 ^\n      104 |     expect(result.combinedScore).toBeGreaterThan(0.6);\n      105 |     expect(result.needsVerification).toBe(false); // Should not need verification with explicit feedback\n      106 |     \n\n      at Object.toBe (src/tests/core/detection/newsletter-detector-impl.test.ts:103:33)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/detection/newsletter-detector-impl.test.ts","startTime":1745540712593,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["FeedbackCollector","collectFeedback"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector collectFeedback should collect feedback and save it to the repository","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should collect feedback and save it to the repository"},{"ancestorTitles":["FeedbackCollector","collectFeedback"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector collectFeedback should update associated verification request if one exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update associated verification request if one exists"},{"ancestorTitles":["FeedbackCollector","processVerificationResponse"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector processVerificationResponse should process a verification response","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should process a verification response"},{"ancestorTitles":["FeedbackCollector","processVerificationResponse"],"duration":6,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector processVerificationResponse should throw an error if the verification request is not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error if the verification request is not found"},{"ancestorTitles":["FeedbackCollector","processVerificationResponse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector processVerificationResponse should throw an error if the verification request has expired","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw an error if the verification request has expired"},{"ancestorTitles":["FeedbackCollector","getPendingVerifications"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector getPendingVerifications should get pending verification requests for a user","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should get pending verification requests for a user"},{"ancestorTitles":["FeedbackCollector","cancelVerification"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector cancelVerification should cancel a verification request","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should cancel a verification request"},{"ancestorTitles":["FeedbackCollector","cancelVerification"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"FeedbackCollector cancelVerification should return false if an error occurs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return false if an error occurs"}],"endTime":1745540712815,"message":"","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/feedback/feedback-collector.test.ts","startTime":1745540712721,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ContentStructureAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should return correct method type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct method type"},{"ancestorTitles":["ContentStructureAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should return correct weight","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct weight"},{"ancestorTitles":["ContentStructureAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should identify newsletter layout","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should identify newsletter layout"},{"ancestorTitles":["ContentStructureAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should detect structural elements","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect structural elements"},{"ancestorTitles":["ContentStructureAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should recognize templated sections","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should recognize templated sections"},{"ancestorTitles":["ContentStructureAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should analyze email with newsletter structure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should analyze email with newsletter structure"},{"ancestorTitles":["ContentStructureAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ContentStructureAnalyzer should analyze email without newsletter structure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should analyze email without newsletter structure"}],"endTime":1745540712843,"message":"","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/detection/content-structure-analyzer.test.ts","startTime":1745540712749,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CategoryMatcher"],"duration":112,"failureDetails":[],"failureMessages":[],"fullName":"CategoryMatcher should match categories for tech newsletter","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should match categories for tech newsletter"},{"ancestorTitles":["CategoryMatcher"],"duration":112,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/category-matcher.test.ts:162:49)"],"fullName":"CategoryMatcher should calculate relevance scores","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should calculate relevance scores"},{"ancestorTitles":["CategoryMatcher"],"duration":102,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/category-matcher.test.ts:205:32)"],"fullName":"CategoryMatcher should get categories for a newsletter","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should get categories for a newsletter"},{"ancestorTitles":["CategoryMatcher"],"duration":117,"failureDetails":[],"failureMessages":[],"fullName":"CategoryMatcher should add and remove manual category assignments","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should add and remove manual category assignments"}],"endTime":1745540712875,"message":"  ● CategoryMatcher › should calculate relevance scores\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      160 |       \n      161 |       // Finance content should have higher relevance for finance category\n    > 162 |       expect(financeScores[financeCategory.id]).toBeGreaterThan(financeScores[techCategory.id]);\n          |                                                 ^\n      163 |     }\n      164 |   });\n      165 |\n\n      at Object.toBeGreaterThan (src/tests/core/categorization/category-matcher.test.ts:162:49)\n\n  ● CategoryMatcher › should get categories for a newsletter\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      203 |\n      204 |     expect(assignments).toBeDefined();\n    > 205 |     expect(assignments.length).toBeGreaterThan(0);\n          |                                ^\n      206 |   });\n      207 |\n      208 |   test('should add and remove manual category assignments', async () => {\n\n      at Object.toBeGreaterThan (src/tests/core/categorization/category-matcher.test.ts:205:32)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/categorization/category-matcher.test.ts","startTime":1745540710895,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["DetectionConfidenceCalculator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DetectionConfidenceCalculator should calculate combined confidence score","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should calculate combined confidence score"},{"ancestorTitles":["DetectionConfidenceCalculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DetectionConfidenceCalculator should handle empty scores array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle empty scores array"},{"ancestorTitles":["DetectionConfidenceCalculator"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DetectionConfidenceCalculator should calculate verification need based on threshold","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should calculate verification need based on threshold"},{"ancestorTitles":["DetectionConfidenceCalculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DetectionConfidenceCalculator should return method weights","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return method weights"},{"ancestorTitles":["DetectionConfidenceCalculator"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DetectionConfidenceCalculator should weigh methods with higher confidence more","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should weigh methods with higher confidence more"}],"endTime":1745540712903,"message":"","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/detection/detection-confidence-calculator.test.ts","startTime":1745540712843,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["HeaderAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should return correct method type","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct method type"},{"ancestorTitles":["HeaderAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should return correct weight","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return correct weight"},{"ancestorTitles":["HeaderAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should detect List-Unsubscribe header","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect List-Unsubscribe header"},{"ancestorTitles":["HeaderAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should handle missing List-Unsubscribe header","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing List-Unsubscribe header"},{"ancestorTitles":["HeaderAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should detect newsletter-specific headers","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should detect newsletter-specific headers"},{"ancestorTitles":["HeaderAnalyzer"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should recognize newsletter sender patterns","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should recognize newsletter sender patterns"},{"ancestorTitles":["HeaderAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should analyze email with newsletter indicators","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should analyze email with newsletter indicators"},{"ancestorTitles":["HeaderAnalyzer"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"HeaderAnalyzer should analyze email without newsletter indicators","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should analyze email without newsletter indicators"}],"endTime":1745540712928,"message":"","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/detection/header-analyzer.test.ts","startTime":1745540712854,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Categorization Flow Integration Tests","Category Management"],"duration":10,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:90:70)"],"fullName":"Categorization Flow Integration Tests Category Management should retrieve categories through the GetCategoriesTool","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"failed","title":"should retrieve categories through the GetCategoriesTool"},{"ancestorTitles":["Categorization Flow Integration Tests","Category Management"],"duration":17,"failureDetails":[{"matcherResult":{"actual":false,"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: false\n    at Object.toBe (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:117:72)"],"fullName":"Categorization Flow Integration Tests Category Management should retrieve subcategories for a parent category","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should retrieve subcategories for a parent category"},{"ancestorTitles":["Categorization Flow Integration Tests","Automatic Categorization"],"duration":20,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:142:33)"],"fullName":"Categorization Flow Integration Tests Automatic Categorization should categorize a newsletter automatically","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should categorize a newsletter automatically"},{"ancestorTitles":["Categorization Flow Integration Tests","Automatic Categorization"],"duration":1,"failureDetails":[{}],"failureMessages":["TypeError: newsletter?.receivedDate.toISOString is not a function\n    at Object.toISOString (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:164:48)"],"fullName":"Categorization Flow Integration Tests Automatic Categorization should use the CategorizeNewsletterTool correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should use the CategorizeNewsletterTool correctly"},{"ancestorTitles":["Categorization Flow Integration Tests","Manual Categorization"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: Cannot read properties of undefined (reading 'id')\n    at Object.id (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:205:36)"],"fullName":"Categorization Flow Integration Tests Manual Categorization should assign a category to a newsletter manually","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should assign a category to a newsletter manually"},{"ancestorTitles":["Categorization Flow Integration Tests","Manual Categorization"],"duration":9,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:239:59)"],"fullName":"Categorization Flow Integration Tests Manual Categorization should retrieve a newsletter with its categories","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should retrieve a newsletter with its categories"},{"ancestorTitles":["Categorization Flow Integration Tests","Theme Detection and Relationships"],"duration":19,"failureDetails":[{}],"failureMessages":["TypeError: categorizer.getThemeDetector is not a function\n    at Object.getThemeDetector (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts:320:41)"],"fullName":"Categorization Flow Integration Tests Theme Detection and Relationships should detect themes across newsletters in the same category","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should detect themes across newsletters in the same category"}],"endTime":1745540713606,"message":"  ● Categorization Flow Integration Tests › Category Management › should retrieve categories through the GetCategoriesTool\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      88 |       const mainCategories = ['Technology', 'Finance', 'Science', 'Design'];\n      89 |       for (const mainCategory of mainCategories) {\n    > 90 |         expect(categories.some((c: any) => c.name === mainCategory)).toBe(true);\n         |                                                                      ^\n      91 |       }\n      92 |     });\n      93 |     \n\n      at Object.toBe (src/tests/integration/categorization-flow.test.ts:90:70)\n\n  ● Categorization Flow Integration Tests › Category Management › should retrieve subcategories for a parent category\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: false\n\n      115 |       const techSubcategories = ['Software Development', 'AI & Machine Learning'];\n      116 |       for (const subCategory of techSubcategories) {\n    > 117 |         expect(subcategories.some((c: any) => c.name === subCategory)).toBe(true);\n          |                                                                        ^\n      118 |       }\n      119 |     });\n      120 |   });\n\n      at Object.toBe (src/tests/integration/categorization-flow.test.ts:117:72)\n\n  ● Categorization Flow Integration Tests › Automatic Categorization › should categorize a newsletter automatically\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      140 |       // Verify categorization results\n      141 |       expect(categories).toBeDefined();\n    > 142 |       expect(categories.length).toBeGreaterThan(0);\n          |                                 ^\n      143 |       \n      144 |       // Each category should have expected properties\n      145 |       for (const category of categories) {\n\n      at Object.toBeGreaterThan (src/tests/integration/categorization-flow.test.ts:142:33)\n\n  ● Categorization Flow Integration Tests › Automatic Categorization › should use the CategorizeNewsletterTool correctly\n\n    TypeError: newsletter?.receivedDate.toISOString is not a function\n\n      162 |         subject: newsletter?.subject,\n      163 |         sender: newsletter?.sender,\n    > 164 |         receivedDate: newsletter?.receivedDate.toISOString(),\n          |                                                ^\n      165 |         content: JSON.parse(newsletter?.processedContentJson || '{}').content,\n      166 |         links: JSON.parse(newsletter?.processedContentJson || '{}').links,\n      167 |         summary: JSON.parse(newsletter?.processedContentJson || '{}').summary,\n\n      at Object.toISOString (src/tests/integration/categorization-flow.test.ts:164:48)\n\n  ● Categorization Flow Integration Tests › Manual Categorization › should assign a category to a newsletter manually\n\n    TypeError: Cannot read properties of undefined (reading 'id')\n\n      203 |       const result = await AssignCategoryTool.handler({\n      204 |         newsletterId,\n    > 205 |         categoryId: designCategory.id,\n          |                                    ^\n      206 |         confidence: 1.0 // Manual assignment is 100% confidence\n      207 |       });\n      208 |       \n\n      at Object.id (src/tests/integration/categorization-flow.test.ts:205:36)\n\n  ● Categorization Flow Integration Tests › Manual Categorization › should retrieve a newsletter with its categories\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n      237 |       expect(newsletterWithCategories).not.toBeNull();\n      238 |       expect(newsletterWithCategories?.categories).toBeDefined();\n    > 239 |       expect(newsletterWithCategories?.categories.length).toBeGreaterThan(0);\n          |                                                           ^\n      240 |       \n      241 |       // Should include both automatic and manual categories\n      242 |       const categoryNames = newsletterWithCategories?.categories.map(c => c.name) || [];\n\n      at Object.toBeGreaterThan (src/tests/integration/categorization-flow.test.ts:239:59)\n\n  ● Categorization Flow Integration Tests › Theme Detection and Relationships › should detect themes across newsletters in the same category\n\n    TypeError: categorizer.getThemeDetector is not a function\n\n      318 |       // Get the theme detector from categorizer\n      319 |       const categorizer = createCategorizer();\n    > 320 |       const themeDetector = categorizer.getThemeDetector();\n          |                                         ^\n      321 |       \n      322 |       // Detect themes within the technology category\n      323 |       const themes = await themeDetector.detectThemes(techCategory.id);\n\n      at Object.getThemeDetector (src/tests/integration/categorization-flow.test.ts:320:41)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/categorization-flow.test.ts","startTime":1745540710881,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Data Access Module"],"duration":142,"failureDetails":[],"failureMessages":[],"fullName":"Data Access Module should create a data access instance","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create a data access instance"},{"ancestorTitles":["Data Access Module"],"duration":320,"failureDetails":[],"failureMessages":[],"fullName":"Data Access Module should run migrations and create tables","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should run migrations and create tables"},{"ancestorTitles":["Data Access Module"],"duration":116,"failureDetails":[],"failureMessages":[],"fullName":"Data Access Module should create, retrieve, update, and delete a user","invocations":1,"location":null,"numPassingAsserts":14,"retryReasons":[],"status":"passed","title":"should create, retrieve, update, and delete a user"},{"ancestorTitles":["Data Access Module"],"duration":36,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeNull()\n\nReceived: {\"createdAt\": \"[object Object]\", \"email\": \"transaction2@example.com\", \"id\": \"test-id-3\", \"name\": \"Transaction Test 2\", \"preferencesJson\": null, \"updatedAt\": \"[object Object]\"}","pass":false}}],"failureMessages":["Error: expect(received).toBeNull()\n\nReceived: {\"createdAt\": \"[object Object]\", \"email\": \"transaction2@example.com\", \"id\": \"test-id-3\", \"name\": \"Transaction Test 2\", \"preferencesJson\": null, \"updatedAt\": \"[object Object]\"}\n    at Object.toBeNull (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/data/data-access.test.ts:188:24)"],"fullName":"Data Access Module should handle transactions correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"should handle transactions correctly"},{"ancestorTitles":["Data Access Module"],"duration":164,"failureDetails":[],"failureMessages":[],"fullName":"Data Access Module should validate data integrity","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should validate data integrity"},{"ancestorTitles":["Data Access Module"],"duration":93,"failureDetails":[],"failureMessages":[],"fullName":"Data Access Module should use caching correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should use caching correctly"}],"endTime":1745540713693,"message":"  ● Data Access Module › should handle transactions correctly\n\n    expect(received).toBeNull()\n\n    Received: {\"createdAt\": \"[object Object]\", \"email\": \"transaction2@example.com\", \"id\": \"test-id-3\", \"name\": \"Transaction Test 2\", \"preferencesJson\": null, \"updatedAt\": \"[object Object]\"}\n\n      186 |     // Verify second user was not created\n      187 |     const foundUser2 = await userRepository.findByEmail('transaction2@example.com');\n    > 188 |     expect(foundUser2).toBeNull();\n          |                        ^\n      189 |     \n      190 |     // Clean up\n      191 |     await userRepository.delete(user1.id);\n\n      at Object.toBeNull (src/tests/data/data-access.test.ts:188:24)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/data/data-access.test.ts","startTime":1745540710897,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Newsletter Detection"],"duration":59,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Newsletter Detection should correctly identify newsletter emails","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"status":"passed","title":"should correctly identify newsletter emails"},{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Newsletter Detection"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Newsletter Detection should correctly identify non-newsletter emails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should correctly identify non-newsletter emails"},{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Newsletter Detection"],"duration":20,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Newsletter Detection should use the DetectNewsletterTool correctly","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should use the DetectNewsletterTool correctly"},{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Newsletter Content Processing"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Newsletter Content Processing should extract and process newsletter content","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should extract and process newsletter content"},{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Newsletter Content Processing"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Newsletter Content Processing should use the ExtractNewsletterContentTool correctly","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should use the ExtractNewsletterContentTool correctly"},{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Storing Processed Newsletters"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Storing Processed Newsletters should store processed newsletters in the database","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should store processed newsletters in the database"},{"ancestorTitles":["Newsletter Processing Flow Integration Tests","Complete Newsletter Processing Flow"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Newsletter Processing Flow Integration Tests Complete Newsletter Processing Flow should process newsletters end-to-end using GetNewslettersTool","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should process newsletters end-to-end using GetNewslettersTool"}],"endTime":1745540713702,"message":"","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/newsletter-processing-flow.test.ts","startTime":1745540712668,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ConfigureDigestDeliveryTool should have the correct name and description","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should have the correct name and description"},{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"ConfigureDigestDeliveryTool should configure basic digest delivery settings","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should configure basic digest delivery settings"},{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ConfigureDigestDeliveryTool should handle custom schedule for weekly digest","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle custom schedule for weekly digest"},{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ConfigureDigestDeliveryTool should reject invalid delivery time format","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject invalid delivery time format"},{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"ConfigureDigestDeliveryTool should require custom schedule when frequency is custom","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should require custom schedule when frequency is custom"},{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"ConfigureDigestDeliveryTool should handle format preferences","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle format preferences"},{"ancestorTitles":["ConfigureDigestDeliveryTool"],"duration":10,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Error\"\nReceived string:    \"Digest delivery preferences have been configured successfully.\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Error\"\nReceived string:    \"Digest delivery preferences have been configured successfully.\"\n    at Object.toContain (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/configure-digest-delivery-tool.test.ts:210:36)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"ConfigureDigestDeliveryTool should handle errors when user not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"should handle errors when user not found"}],"endTime":1745540714275,"message":"  ● ConfigureDigestDeliveryTool › should handle errors when user not found\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Error\"\n    Received string:    \"Digest delivery preferences have been configured successfully.\"\n\n      208 |     \n      209 |     expect(result.content[0].type).toBe('text');\n    > 210 |     expect(result.content[0].text).toContain('Error');\n          |                                    ^\n      211 |     expect(result.content[0].text).toContain('User with ID nonexistent not found');\n      212 |   });\n      213 | });\n\n      at Object.toContain (src/tests/tools/configure-digest-delivery-tool.test.ts:210:36)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/configure-digest-delivery-tool.test.ts","startTime":1745540712712,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Digest Generation Flow Integration Tests","Digest Generation"],"duration":8,"failureDetails":[{}],"failureMessages":["TypeError: digestService.generateDigest is not a function\n    at Object.generateDigest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/digest-generation-flow.test.ts:160:42)\n    at Promise.then.completed (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Digest Generation Flow Integration Tests Digest Generation should generate daily digests with the correct content","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate daily digests with the correct content"},{"ancestorTitles":["Digest Generation Flow Integration Tests","Digest Generation"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: digestService.generateDigest is not a function\n    at Object.generateDigest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/digest-generation-flow.test.ts:193:42)\n    at Promise.then.completed (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Digest Generation Flow Integration Tests Digest Generation should generate weekly thematic digests","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should generate weekly thematic digests"},{"ancestorTitles":["Digest Generation Flow Integration Tests","Digest Generation"],"duration":11,"failureDetails":[{"matcherResult":{"message":"expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Update\"\nReceived string:    \"<h1>Test Newsletter Digest</h1><p>This is a test digest</p><h2>Technology</h2><p>Technology news</p><h2>Business</h2><p>Business updates</p>\"","pass":false}}],"failureMessages":["Error: expect(received).toContain(expected) // indexOf\n\nExpected substring: \"Update\"\nReceived string:    \"<h1>Test Newsletter Digest</h1><p>This is a test digest</p><h2>Technology</h2><p>Technology news</p><h2>Business</h2><p>Business updates</p>\"\n    at Object.toContain (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/digest-generation-flow.test.ts:233:33)"],"fullName":"Digest Generation Flow Integration Tests Digest Generation should use the GenerateDigestTool correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"failed","title":"should use the GenerateDigestTool correctly"},{"ancestorTitles":["Digest Generation Flow Integration Tests","Email Template Rendering"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: digestService.generateDigest is not a function\n    at Object.generateDigest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/digest-generation-flow.test.ts:244:42)\n    at Promise.then.completed (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Digest Generation Flow Integration Tests Email Template Rendering should render email templates for digests","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should render email templates for digests"},{"ancestorTitles":["Digest Generation Flow Integration Tests","Digest Delivery Configuration"],"duration":19,"failureDetails":[],"failureMessages":[],"fullName":"Digest Generation Flow Integration Tests Digest Delivery Configuration should configure digest delivery preferences","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should configure digest delivery preferences"},{"ancestorTitles":["Digest Generation Flow Integration Tests","Digest Email Sending"],"duration":0,"failureDetails":[{}],"failureMessages":["TypeError: digestService.generateDigest is not a function\n    at Object.generateDigest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/digest-generation-flow.test.ts:329:42)\n    at Promise.then.completed (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/runTest.js:444:34)\n    at Object.worker (/Users/vinaysridhar/Desktop/Projects/hypat.ai/node_modules/jest-runner/build/testWorker.js:106:12)"],"fullName":"Digest Generation Flow Integration Tests Digest Email Sending should send digest emails","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should send digest emails"}],"endTime":1745540714366,"message":"  ● Digest Generation Flow Integration Tests › Digest Generation › should generate daily digests with the correct content\n\n    TypeError: digestService.generateDigest is not a function\n\n      158 |       };\n      159 |       \n    > 160 |       const digest = await digestService.generateDigest(digestOptions);\n          |                                          ^\n      161 |       \n      162 |       // Verify digest structure\n      163 |       expect(digest).toHaveProperty('id');\n\n      at Object.generateDigest (src/tests/integration/digest-generation-flow.test.ts:160:42)\n\n  ● Digest Generation Flow Integration Tests › Digest Generation › should generate weekly thematic digests\n\n    TypeError: digestService.generateDigest is not a function\n\n      191 |       };\n      192 |       \n    > 193 |       const digest = await digestService.generateDigest(digestOptions);\n          |                                          ^\n      194 |       \n      195 |       // Verify digest structure\n      196 |       expect(digest).toHaveProperty('id');\n\n      at Object.generateDigest (src/tests/integration/digest-generation-flow.test.ts:193:42)\n\n  ● Digest Generation Flow Integration Tests › Digest Generation › should use the GenerateDigestTool correctly\n\n    expect(received).toContain(expected) // indexOf\n\n    Expected substring: \"Update\"\n    Received string:    \"<h1>Test Newsletter Digest</h1><p>This is a test digest</p><h2>Technology</h2><p>Technology news</p><h2>Business</h2><p>Business updates</p>\"\n\n      231 |       \n      232 |       // HTML should include newsletter content\n    > 233 |       expect(htmlContent?.html).toContain('Update');\n          |                                 ^\n      234 |     });\n      235 |   });\n      236 |   \n\n      at Object.toContain (src/tests/integration/digest-generation-flow.test.ts:233:33)\n\n  ● Digest Generation Flow Integration Tests › Email Template Rendering › should render email templates for digests\n\n    TypeError: digestService.generateDigest is not a function\n\n      242 |       \n      243 |       // Generate a digest to be used in templates\n    > 244 |       const digest = await digestService.generateDigest({\n          |                                          ^\n      245 |         startDate: DateTime.now().minus({ days: 1 }).toJSDate(),\n      246 |         endDate: DateTime.now().toJSDate(),\n      247 |         userId: primaryUserId,\n\n      at Object.generateDigest (src/tests/integration/digest-generation-flow.test.ts:244:42)\n\n  ● Digest Generation Flow Integration Tests › Digest Email Sending › should send digest emails\n\n    TypeError: digestService.generateDigest is not a function\n\n      327 |       // First, generate a digest\n      328 |       const digestService = createDigestService();\n    > 329 |       const digest = await digestService.generateDigest({\n          |                                          ^\n      330 |         startDate: DateTime.now().minus({ days: 1 }).toJSDate(),\n      331 |         endDate: DateTime.now().toJSDate(),\n      332 |         userId: primaryUserId,\n\n      at Object.generateDigest (src/tests/integration/digest-generation-flow.test.ts:329:42)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/digest-generation-flow.test.ts","startTime":1745540710882,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ToolRegistrar"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistrar should organize tools by category","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should organize tools by category"},{"ancestorTitles":["ToolRegistrar"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistrar should register all tools correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should register all tools correctly"},{"ancestorTitles":["ToolRegistrar"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistrar should register tools by category","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should register tools by category"},{"ancestorTitles":["ToolRegistrar"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistrar should throw error for unknown category","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for unknown category"},{"ancestorTitles":["ToolRegistrar"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistrar should expose all tools through the HYPAT_TOOLS constant","invocations":1,"location":null,"numPassingAsserts":73,"retryReasons":[],"status":"passed","title":"should expose all tools through the HYPAT_TOOLS constant"},{"ancestorTitles":["ToolRegistrar"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"ToolRegistrar should register tools through the registerHypatTools function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should register tools through the registerHypatTools function"}],"endTime":1745540714436,"message":"","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/tools/tool-registrar.test.ts","startTime":1745540712693,"status":"passed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745541572581,"message":"  ● Test suite failed to run\n\n    A jest worker process (pid=6615) was terminated by another process: signal=SIGTERM, exitCode=null. Operating system logs may contain more information on why this occurred.\n\n      at ChildProcessWorker._onExit (node_modules/jest-worker/build/workers/ChildProcessWorker.js:370:23)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/integration/feedback-flow.test.ts","startTime":1745541572581,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1745541572581,"message":"  ● Test suite failed to run\n\n    A jest worker process (pid=6612) was terminated by another process: signal=SIGTERM, exitCode=null. Operating system logs may contain more information on why this occurred.\n\n      at ChildProcessWorker._onExit (node_modules/jest-worker/build/workers/ChildProcessWorker.js:370:23)\n","name":"/Users/vinaysridhar/Desktop/Projects/hypat.ai/src/tests/core/feedback/feedback-analyzer.test.ts","startTime":1745541572581,"status":"failed","summary":""}],"wasInterrupted":false}
